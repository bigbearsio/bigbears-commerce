name: Build
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 8432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    defaults:
      run:
        working-directory: .
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_REPO: bigbearsio
    steps:
    - uses: actions/checkout@v2
      with: 
        clean: true
    - name: Login to DockerHub Registry
      run: echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
    - name: Build Images
      run: | 
        docker build --target server -t $DOCKERHUB_REPO/commerce-server:${GITHUB_SHA::7} .   
        docker build --target client -t $DOCKERHUB_REPO/commerce-client:${GITHUB_SHA::7} .   

        docker tag $DOCKERHUB_REPO/commerce-server:${GITHUB_SHA::7} $DOCKERHUB_REPO/commerce-server:latest
        docker tag $DOCKERHUB_REPO/commerce-client:${GITHUB_SHA::7} $DOCKERHUB_REPO/commerce-client:latest
    - name: Push Images
      run: | 
        docker push $DOCKERHUB_REPO/commerce-server:${GITHUB_SHA::7}
        docker push $DOCKERHUB_REPO/commerce-client:${GITHUB_SHA::7}

        docker push $DOCKERHUB_REPO/commerce-server:latest
        docker push $DOCKERHUB_REPO/commerce-client:latest